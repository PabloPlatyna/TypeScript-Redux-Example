{"version":3,"sources":["store/reduser1/action.ts","CurrencyReduxComponents/InPut.tsx","CurrencyReduxComponents/OutPut.tsx","CurrencyRedux.tsx","App.tsx","store/reduser1/reducer.tsx","store/index.tsx","index.tsx"],"names":["setInputChoise","value","type","e","setOutputChoise","setInputCurrencyValue","setOutputCurrencyValue","setImputValue","setOutPutValue","Div","styled","div","InputStyled","input","SelectStyled","select","FaExchangeAltStyled","FaExchangeAlt","InPut","useSelector","state","InputReducer","InputChoise","OutputChoise","InputCurrencyValue","OutputCurrencyValue","ImputValue","OutPutValue","dispatch","useDispatch","useEffect","getValue","a","axios","get","res","eval","toFixed","handleChange","target","name","handleSwitch","handleInputValue","console","log","Number","onChange","id","style","borderBottomLeftRadius","borderTopLeftRadius","borderRight","pattern","borderBottomRightRadius","borderTopRightRadius","onClick","OutputStyled","OutPut","Conteiner","CurrencyRedux","App","className","MyStore","action","allReducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.004b5f23.chunk.js","sourcesContent":["import {AppActions} from \"./actionsType\";\r\n\r\nexport const setInputChoise = (value: string): AppActions => ({\r\n  type: \"SET_INPUT_CHOISE\",\r\n  e: value\r\n});\r\nexport const setOutputChoise = (value: string): AppActions => {\r\n  return {\r\n    type: \"SET_OUTPUT_CHOISE\",\r\n    e: value\r\n  };\r\n};\r\nexport const setInputCurrencyValue = (value: string | number): AppActions => {\r\n  return {\r\n    type: \"SET_INPUT_CURRENCY_VALUE\",\r\n    e: value\r\n  };\r\n};\r\nexport const setOutputCurrencyValue = (value: string | number): AppActions => {\r\n  return {\r\n    type: \"SET_OUTPUT_CURRENCY_VALUE\",\r\n    e: value\r\n  };\r\n};\r\nexport const setImputValue = (value: Number | string): AppActions => {\r\n  return {\r\n    type: \"SET_INPUT_VALUE\",\r\n    e: value\r\n  };\r\n};\r\nexport const setOutPutValue = (value: Number | string): AppActions => {\r\n  return {\r\n    type: \"SET_OUTPUT_VALUE\",\r\n    e: value\r\n  };\r\n};\r\n","import React, {useEffect} from \"react\";\r\n// @ts-ignore\r\nimport styled from \"styled-components\";\r\nimport {FaExchangeAlt} from \"react-icons/fa\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  setInputChoise,\r\n  setOutputChoise,\r\n  setInputCurrencyValue,\r\n  setOutputCurrencyValue,\r\n  setImputValue,\r\n  setOutPutValue\r\n} from \"../store/reduser1/action\";\r\nimport {Expense} from \"../store/reduser1/Expense\";\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n`;\r\nconst InputStyled = styled.input`\r\n  width: 250px;\r\n  height: 50px;\r\n  border: 1px solid white;\r\n  font-size: 30px;\r\n  padding: 5px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border: 1px solid rgb(255, 0, 157);\r\n  }\r\n`;\r\nconst SelectStyled = styled.select`\r\n  width: 100px;\r\n  height: 50px;\r\n  border: 1px solid white;\r\n  font-size: 30px;\r\n  padding: 5px;\r\n  &:focus {\r\n    outline: none;\r\n    border: 1px solid rgb(255, 0, 157);\r\n  }\r\n`;\r\nconst FaExchangeAltStyled = styled(FaExchangeAlt)`\r\n  display: inline-block;\r\n  padding: 0px;\r\n  width: 100px;\r\n\r\n  align-self: center;\r\n  line-height: 50px;\r\n  font-size: 20px;\r\n  &:hover {\r\n    font-size: 50px;\r\n  }\r\n`;\r\nexport interface Props {}\r\n\r\nconst InPut: React.FC = () => {\r\n  const {\r\n    InputChoise,\r\n    OutputChoise,\r\n    InputCurrencyValue,\r\n    OutputCurrencyValue,\r\n    ImputValue,\r\n    OutPutValue\r\n  } = useSelector((state: {InputReducer: Expense}) => state.InputReducer);\r\n\r\n  // const InputChoise = useSelector(state => state.InputReducer.InputChoise);\r\n  // const OutputChoise = useSelector(state => state.InputReducer.OutputChoise);\r\n  // const InputCurrencyValue = useSelector(state => state.InputReducer.InputCurrencyValue);\r\n  // const OutputCurrencyValue = useSelector(state => state.InputReducer.OutputCurrencyValue);\r\n  // const ImputValue = useSelector(state => state.InputReducer.InputValue);\r\n  // const OutPutValue = useSelector(state => state.InputReducer.OutPutValue);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    getValue();\r\n  }, [InputChoise, OutputChoise]);\r\n\r\n  const getValue = async () => {\r\n    const res = await axios.get(\r\n      `https://api.exchangeratesapi.io/latest?base=${InputChoise}`\r\n    );\r\n    dispatch(\r\n      setInputCurrencyValue(eval(`res.data.rates.${OutputChoise}.toFixed(4)`))\r\n    );\r\n\r\n    dispatch(\r\n      setOutputCurrencyValue(\r\n        (1 / eval(`res.data.rates.${OutputChoise}`)).toFixed(4)\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    switch (e.target.name) {\r\n      case \"InputChoise\":\r\n        e.target.value === OutputChoise &&\r\n          dispatch(setOutputChoise(InputChoise));\r\n        dispatch(setInputChoise(e.target.value));\r\n        // dispatch(setOutPutValue(ImputValue * OutputCurrencyValue));\r\n        break;\r\n      case \"OutputChoise\":\r\n        e.target.value === InputChoise &&\r\n          dispatch(setInputChoise(OutputChoise));\r\n        dispatch(setOutputChoise(e.target.value));\r\n        // dispatch(setOutPutValue(ImputValue * OutputCurrencyValue));\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n  // e => dispatch(setInputChoise(e))\r\n  const handleSwitch = () => {\r\n    dispatch(setInputChoise(OutputChoise));\r\n    dispatch(setOutputChoise(InputChoise));\r\n    dispatch(setInputCurrencyValue(OutputCurrencyValue));\r\n    dispatch(setOutputCurrencyValue(InputCurrencyValue));\r\n    dispatch(setImputValue(OutPutValue));\r\n    dispatch(setOutPutValue(ImputValue));\r\n  };\r\n\r\n  const handleInputValue = (e: any) => {\r\n    switch (e.target.name) {\r\n      case \"InputChoise\":\r\n        console.log(typeof e.target.value);\r\n\r\n        // if (typeof e.target.value === \"string\") {\r\n        //   return;\r\n        // }\r\n        dispatch(setImputValue(e.target.value));\r\n        dispatch(\r\n          setOutPutValue(\r\n            Number((e.target.value * Number(InputCurrencyValue)).toFixed(2))\r\n          )\r\n        );\r\n        break;\r\n      case \"OutputChoise\":\r\n        dispatch(setOutPutValue(e.target.value));\r\n        dispatch(\r\n          setImputValue(\r\n            Number((e.target.value * Number(OutputCurrencyValue)).toFixed(2))\r\n          )\r\n        );\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Div>\r\n      <SelectStyled\r\n        value={InputChoise}\r\n        onChange={handleChange}\r\n        name=\"InputChoise\"\r\n        id=\"\"\r\n        style={{\r\n          borderBottomLeftRadius: \"10px\",\r\n          borderTopLeftRadius: \"10px\",\r\n          borderRight: \"none\"\r\n        }}\r\n      >\r\n        <option value=\"EUR\">EUR</option>\r\n        <option value=\"PLN\">PLN</option>\r\n        <option value=\"USD\">USD</option>\r\n      </SelectStyled>\r\n      <InputStyled\r\n        pattern=\"[0-9]*\"\r\n        onChange={handleInputValue}\r\n        value={ImputValue}\r\n        type=\"number\"\r\n        name=\"InputChoise\"\r\n        style={{\r\n          borderBottomRightRadius: \"10px\",\r\n          borderTopRightRadius: \"10px\"\r\n        }}\r\n      />\r\n      <FaExchangeAltStyled onClick={handleSwitch} />\r\n      <InputStyled\r\n        onChange={handleInputValue}\r\n        value={OutPutValue}\r\n        type=\"text\"\r\n        name=\"OutputChoise\"\r\n        style={{\r\n          borderBottomLeftRadius: \"10px\",\r\n          borderTopLeftRadius: \"10px\",\r\n          borderRight: \"none\"\r\n        }}\r\n      />\r\n      <SelectStyled\r\n        value={OutputChoise}\r\n        onChange={handleChange}\r\n        name=\"OutputChoise\"\r\n        id=\"\"\r\n        style={{\r\n          borderBottomRightRadius: \"10px\",\r\n          borderTopRightRadius: \"10px\"\r\n        }}\r\n      >\r\n        <option value=\"EUR\">EUR</option>\r\n        <option value=\"PLN\">PLN</option>\r\n        <option value=\"USD\">USD</option>\r\n      </SelectStyled>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default InPut;\r\n","import React from \"react\";\r\n// @ts-ignore\r\nimport styled from \"styled-components\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Expense} from \"../store/reduser1/Expense\";\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst OutputStyled = styled.div`\r\n  width: 350px;\r\n  height: 50px;\r\n  border: 1px solid white;\r\n  margin: 10px 50px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 25px;\r\n`;\r\n\r\nconst OutPut: React.FC = () => {\r\n  const InputChoise = useSelector(\r\n    (state: {InputReducer: Expense}) => state.InputReducer.InputChoise\r\n  );\r\n  const OutputChoise = useSelector(\r\n    (state: {InputReducer: Expense}) => state.InputReducer.OutputChoise\r\n  );\r\n  const InputCurrencyValue = useSelector(\r\n    (state: {InputReducer: Expense}) => state.InputReducer.InputCurrencyValue\r\n  );\r\n  const OutputCurrencyValue = useSelector(\r\n    (state: {InputReducer: Expense}) => state.InputReducer.OutputCurrencyValue\r\n  );\r\n\r\n  return (\r\n    <Div>\r\n      <OutputStyled>\r\n        1 {InputChoise}= {InputCurrencyValue} {OutputChoise}\r\n      </OutputStyled>\r\n      <OutputStyled>\r\n        1 {OutputChoise}= {OutputCurrencyValue} {InputChoise}\r\n      </OutputStyled>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default OutPut;\r\n","import React from \"react\";\r\n// @ts-ignore\r\nimport styled from \"styled-components\";\r\n\r\nimport InPut from \"./CurrencyReduxComponents/InPut\";\r\nimport OutPut from \"./CurrencyReduxComponents/OutPut\";\r\n\r\nconst Conteiner = styled.div`\r\n  margin-top: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst CurrencyRedux: React.FC = () => {\r\n  return (\r\n    <Conteiner>\r\n      <InPut />\r\n      <OutPut />\r\n    </Conteiner>\r\n  );\r\n};\r\n\r\nexport default CurrencyRedux;\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport CurrencyRedux from \"./CurrencyRedux\";\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <CurrencyRedux />\n    </div>\n  );\n};\n\nexport default App;\n","import {ExpenseActionTypes} from \"./actionsType\";\r\nimport {Expense} from \"./Expense\";\r\n\r\nconst MyStore: Expense = {\r\n  InputChoise: \"EUR\",\r\n  OutputChoise: \"PLN\",\r\n  InputCurrencyValue: \"----\",\r\n  OutputCurrencyValue: \"----\",\r\n  ImputValue: \"\",\r\n  OutPutValue: \"\"\r\n};\r\n\r\nconst InputReducer = (state = MyStore, action: ExpenseActionTypes): Expense => {\r\n  switch (action.type) {\r\n    case \"SET_INPUT_CHOISE\":\r\n      return {...state, InputChoise: action.e};\r\n    case \"SET_OUTPUT_CHOISE\":\r\n      return {...state, OutputChoise: action.e};\r\n    case \"SET_INPUT_CURRENCY_VALUE\":\r\n      return {...state, InputCurrencyValue: action.e};\r\n    case \"SET_OUTPUT_CURRENCY_VALUE\":\r\n      return {...state, OutputCurrencyValue: action.e};\r\n    case \"SET_INPUT_VALUE\":\r\n      return {...state, ImputValue: action.e};\r\n    case \"SET_OUTPUT_VALUE\":\r\n      return {...state, OutPutValue: action.e};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default InputReducer;\r\n","import InputReducer from \"./reduser1/reducer\";\r\n// import OutPutValueReducer from \"./OutPutValue.js\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n  InputReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof allReducers>;\r\nexport default allReducers;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport {createStore, compose} from \"redux\";\r\nimport allReducers from \"./store\";\r\nimport {Provider} from \"react-redux\";\r\nimport \"./index.css\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(allReducers, composeEnhancers());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}